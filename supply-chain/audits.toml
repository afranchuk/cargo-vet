
# cargo-vet audits file

[[audits.backtrace]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "0.3.66 -> 0.3.65"
notes = "Only changes were to the miri backend, which will be checked"

[[audits.base64-stream]]
who = "Alex Franchuk <afranchuk@mozilla.com>"
criteria = "safe-to-deploy"
version = "1.2.7"
notes = """
The crate is fairly straightforward. There are a few unsafe blocks to elide
bounds-checking when copying data, but I have manually verified that the unsafe
blocks will always have lengths within bounds of source and destination
pointers. Some `debug_assert!`s document and check these invariants as well
(though there could be more).
"""

[[audits.bitflags]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "2.9.0 -> 2.9.1"

[[audits.borsh]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "1.5.7"
notes = "Uses of unsafe are limited to safe use-cases."

[[audits.cargo-config2]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "0.1.27"
notes = """
Contains no unsafe code and does not appear to abuse any powerful capabilities
such as filesystem access.
"""

[[audits.cargo_metadata]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "0.14.2 -> 0.15.2"

[[audits.cargo_metadata]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "0.19.2 -> 0.20.0"

[[audits.dirs]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "4.0.0 -> 6.0.0"

[[audits.dirs-sys]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "0.3.7 -> 0.5.0"

[[audits.doc-comment]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "0.3.3"
notes = """
Trivial macro crate implementing a trick for expanding macros within doc
comments on older versions of rustc.
"""

[[audits.either]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "1.6.1"
notes = """
Straightforward crate providing the Either enum and trait implementations with
no unsafe code.
"""

[[audits.home]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "0.5.3"
notes = """
Crate with straightforward code for determining the user's HOME directory. Only
unsafe code is used to invoke the Windows SHGetFolderPathW API to get the
profile directory when the USERPROFILE environment variable is unavailable.
"""

[[audits.home]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "0.5.3 -> 0.5.11"

[[audits.idna_adapter]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "1.2.0 -> 1.2.1"

[[audits.is-docker]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "0.2.0"
notes = "Fairly straightforward checking of /.dockerenv and /proc/self/cgroup"

[[audits.is-wsl]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "0.4.0"
notes = 'Straightforward checking of procfs for the string "microsoft"'

[[audits.is_ci]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "1.1.1"
notes = "Trivial crate which checks the environment for specific environment variables"

[[audits.lazy_static]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "1.4.0"
notes = "I have read over the macros, and audited the unsafe code."

[[audits.option-ext]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "0.2.0"

[[audits.pin-project-lite]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "0.2.14 -> 0.2.16"
notes = """
Only functional change is to work around a bug in the negative_impls feature
(https://github.com/taiki-e/pin-project/issues/340#issuecomment-2432146009)
"""

[[audits.rustc_version]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "0.4.0"
notes = """
Use of powerful capabilities is limited to invoking `rustc -vV` to get version
information for parsing version information.
"""

[[audits.serde-value]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "0.7.0"
notes = "Basic implementation of a serde value type. No use of unsafe code."

[[audits.similar]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "2.2.0"
notes = """
Algorithm crate implemented entirely in safe rust. Does no platform-specific
logic, only implementing diffing and string manipulation algorithms.
"""

[[audits.similar]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "2.2.1 -> 2.7.0"

[[audits.smol_str]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
version = "0.3.2"
notes = """
Unsafe is used to implement the small string size optimizations (and is always
checked ahead of time), as well as to avoid redundant utf-8 validation.
"""

[[audits.synstructure]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "0.13.1 -> 0.13.2"

[[audits.tempfile]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "3.19.1 -> 3.20.0"

[[audits.textwrap]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "0.16.1 -> 0.16.2"

[[audits.tinystr]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "0.7.6 -> 0.8.1"

[[audits.utf8parse]]
who = "Nika Layzell <nika@thelayzells.com>"
criteria = "safe-to-deploy"
delta = "0.2.1 -> 0.2.2"

[[trusted.anstream]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2023-03-16"
end = "2026-06-03"

[[trusted.anstyle]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2022-05-18"
end = "2026-06-03"

[[trusted.anstyle-parse]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2023-03-08"
end = "2026-06-03"

[[trusted.anstyle-query]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2023-04-13"
end = "2026-06-03"

[[trusted.anstyle-wincon]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2023-03-08"
end = "2026-06-03"

[[trusted.bytes]]
criteria = "safe-to-deploy"
user-id = 6741 # Alice Ryhl (Darksonn)
start = "2021-01-11"
end = "2026-06-02"

[[trusted.cargo-platform]]
criteria = "safe-to-deploy"
user-id = 55123 # rust-lang-owner
start = "2023-07-13"
end = "2026-06-02"

[[trusted.cargo-util-schemas]]
criteria = "safe-to-deploy"
user-id = 55123 # rust-lang-owner
start = "2024-03-21"
end = "2026-06-02"

[[trusted.clap]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2021-12-08"
end = "2026-06-03"

[[trusted.clap-cargo]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2019-04-08"
end = "2026-06-03"

[[trusted.clap_builder]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2023-03-28"
end = "2026-06-03"

[[trusted.clap_derive]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2021-12-08"
end = "2026-06-03"

[[trusted.clap_lex]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2022-04-15"
end = "2026-06-03"

[[trusted.colorchoice]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2023-04-13"
end = "2026-06-03"

[[trusted.crates-index]]
criteria = "safe-to-deploy"
user-id = 980 # Sebastian Thiel (Byron)
start = "2023-07-29"
end = "2026-06-02"

[[trusted.erased-serde]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2020-01-06"
end = "2026-06-02"

[[trusted.errno]]
criteria = "safe-to-deploy"
user-id = 6825 # Dan Gohman (sunfishcode)
start = "2023-08-29"
end = "2026-06-02"

[[trusted.flate2]]
criteria = "safe-to-deploy"
user-id = 55123 # rust-lang-owner
start = "2022-11-24"
end = "2026-06-02"

[[trusted.hashbrown]]
criteria = "safe-to-deploy"
user-id = 2915 # Amanieu d'Antras (Amanieu)
start = "2019-04-02"
end = "2025-09-12"

[[trusted.icu_collections]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2023-01-26"
end = "2026-06-02"

[[trusted.icu_locale_core]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2025-05-07"
end = "2026-06-02"

[[trusted.icu_normalizer]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2023-01-26"
end = "2026-06-02"

[[trusted.icu_normalizer_data]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2023-11-16"
end = "2026-06-02"

[[trusted.icu_properties]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2023-01-26"
end = "2026-06-02"

[[trusted.icu_properties_data]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2023-11-16"
end = "2026-06-02"

[[trusted.icu_provider]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2022-10-08"
end = "2026-06-02"

[[trusted.indexmap]]
criteria = "safe-to-deploy"
user-id = 539 # Josh Stone (cuviper)
start = "2020-01-15"
end = "2025-09-12"

[[trusted.io-lifetimes]]
criteria = "safe-to-deploy"
user-id = 6825 # Dan Gohman (sunfishcode)
start = "2021-06-12"
end = "2026-06-02"

[[trusted.is_terminal_polyfill]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2024-05-02"
end = "2026-06-03"

[[trusted.itoa]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2019-05-02"
end = "2026-06-02"

[[trusted.libc]]
criteria = "safe-to-deploy"
user-id = 55123 # rust-lang-owner
start = "2024-08-15"
end = "2026-06-02"

[[trusted.linux-raw-sys]]
criteria = "safe-to-deploy"
user-id = 6825 # Dan Gohman (sunfishcode)
start = "2021-06-12"
end = "2026-06-02"

[[trusted.litemap]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2023-01-26"
end = "2026-06-02"

[[trusted.mio]]
criteria = "safe-to-deploy"
user-id = 10
start = "2019-05-15"
end = "2026-06-02"

[[trusted.mio]]
criteria = "safe-to-deploy"
user-id = 6025 # Thomas de Zeeuw (Thomasdezeeuw)
start = "2019-12-17"
end = "2026-06-02"

[[trusted.once_cell_polyfill]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2025-05-22"
end = "2026-06-03"

[[trusted.open]]
criteria = "safe-to-deploy"
user-id = 980 # Sebastian Thiel (Byron)
start = "2019-07-03"
end = "2026-06-02"

[[trusted.ordered-float]]
criteria = "safe-to-deploy"
user-id = 2017 # Matt Brubeck (mbrubeck)
start = "2019-03-13"
end = "2026-06-02"

[[trusted.proc-macro2]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2019-04-23"
end = "2026-06-02"

[[trusted.rustc-stable-hash]]
criteria = "safe-to-deploy"
user-id = 304535 # Urgau
start = "2024-12-10"
end = "2026-06-02"

[[trusted.rustix]]
criteria = "safe-to-deploy"
user-id = 6825 # Dan Gohman (sunfishcode)
start = "2021-10-29"
end = "2026-06-02"

[[trusted.ryu]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2019-05-02"
end = "2026-06-02"

[[trusted.semver]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2021-05-25"
end = "2026-06-02"

[[trusted.serde]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2019-03-01"
end = "2025-09-12"

[[trusted.serde-untagged]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2023-08-27"
end = "2026-06-02"

[[trusted.serde_derive]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2019-03-01"
end = "2025-09-12"

[[trusted.serde_json]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2019-02-28"
end = "2026-06-02"

[[trusted.serde_spanned]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2023-01-20"
end = "2025-09-12"

[[trusted.serde_yaml]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2019-05-02"
end = "2026-06-02"

[[trusted.smallvec]]
criteria = "safe-to-deploy"
user-id = 2017 # Matt Brubeck (mbrubeck)
start = "2019-10-28"
end = "2026-06-02"

[[trusted.socket2]]
criteria = "safe-to-deploy"
user-id = 6025 # Thomas de Zeeuw (Thomasdezeeuw)
start = "2020-09-09"
end = "2026-06-02"

[[trusted.syn]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2019-03-01"
end = "2025-09-12"

[[trusted.thiserror]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2019-10-09"
end = "2026-06-02"

[[trusted.thiserror-impl]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2019-10-09"
end = "2026-06-02"

[[trusted.tinystr]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2023-01-26"
end = "2026-06-02"

[[trusted.tokio]]
criteria = "safe-to-deploy"
user-id = 6741 # Alice Ryhl (Darksonn)
start = "2020-12-25"
end = "2026-06-02"

[[trusted.tokio-macros]]
criteria = "safe-to-deploy"
user-id = 6741 # Alice Ryhl (Darksonn)
start = "2020-10-26"
end = "2026-06-02"

[[trusted.toml]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2022-12-14"
end = "2026-06-02"

[[trusted.toml_datetime]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2022-10-21"
end = "2025-09-12"

[[trusted.toml_edit]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2021-09-13"
end = "2025-09-12"

[[trusted.toml_write]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2025-04-25"
end = "2026-06-02"

[[trusted.typeid]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2024-05-13"
end = "2026-06-02"

[[trusted.unicode-ident]]
criteria = "safe-to-deploy"
user-id = 3618 # David Tolnay (dtolnay)
start = "2021-10-02"
end = "2026-06-02"

[[trusted.wasi]]
criteria = "safe-to-deploy"
user-id = 1 # Alex Crichton (alexcrichton)
start = "2020-06-03"
end = "2026-06-02"

[[trusted.windows-sys]]
criteria = "safe-to-deploy"
user-id = 64539 # Kenny Kerr (kennykerr)
start = "2021-11-15"
end = "2026-06-02"

[[trusted.windows-targets]]
criteria = "safe-to-deploy"
user-id = 64539 # Kenny Kerr (kennykerr)
start = "2022-09-09"
end = "2026-06-02"

[[trusted.windows_aarch64_gnullvm]]
criteria = "safe-to-deploy"
user-id = 64539 # Kenny Kerr (kennykerr)
start = "2022-09-01"
end = "2026-06-02"

[[trusted.windows_aarch64_msvc]]
criteria = "safe-to-deploy"
user-id = 64539 # Kenny Kerr (kennykerr)
start = "2021-11-05"
end = "2026-06-02"

[[trusted.windows_i686_gnu]]
criteria = "safe-to-deploy"
user-id = 64539 # Kenny Kerr (kennykerr)
start = "2021-10-28"
end = "2026-06-02"

[[trusted.windows_i686_gnullvm]]
criteria = "safe-to-deploy"
user-id = 64539 # Kenny Kerr (kennykerr)
start = "2024-04-02"
end = "2026-06-02"

[[trusted.windows_i686_msvc]]
criteria = "safe-to-deploy"
user-id = 64539 # Kenny Kerr (kennykerr)
start = "2021-10-27"
end = "2026-06-02"

[[trusted.windows_x86_64_gnu]]
criteria = "safe-to-deploy"
user-id = 64539 # Kenny Kerr (kennykerr)
start = "2021-10-28"
end = "2026-06-02"

[[trusted.windows_x86_64_gnullvm]]
criteria = "safe-to-deploy"
user-id = 64539 # Kenny Kerr (kennykerr)
start = "2022-09-01"
end = "2026-06-02"

[[trusted.windows_x86_64_msvc]]
criteria = "safe-to-deploy"
user-id = 64539 # Kenny Kerr (kennykerr)
start = "2021-10-27"
end = "2026-06-02"

[[trusted.winnow]]
criteria = "safe-to-deploy"
user-id = 6743 # Ed Page (epage)
start = "2023-02-22"
end = "2025-09-12"

[[trusted.zerotrie]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2023-11-16"
end = "2026-06-02"

[[trusted.zerovec]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2023-01-26"
end = "2026-06-02"

[[trusted.zerovec-derive]]
criteria = "safe-to-deploy"
user-id = 1139 # Manish Goregaokar (Manishearth)
start = "2021-12-11"
end = "2026-06-02"

[[trusted.zerovec-derive]]
criteria = "safe-to-deploy"
user-id = 166196 # Robert Bastian (robertbastian)
start = "2023-01-26"
end = "2026-06-02"
